/*
	It runs in system memory , so it will take lots of memory, so it can give low speed.
	so u should avoid it till  need.
	It allows you to process individual row returned by a query.
	cursoer is e of rows with a pointer that identifies a current row.
	A cursor can hold more than one row, but can process only one.
	set of rows the cursor holds is called the active set.
	
	Implicit & Explicit cursor  - 

	Implicit - 
		cursors are generated and used by the system during the manipulation of a DML query(INSERT,UPDATE,DELETE)
		An explicit cursor is also generated by hte system when a signle row i selected by a SELECT command.
	
	Explicit - 
		Generated by User using SELECT command
		contains 5 parts -
			Declare cursor - declare variables and return a set of values.
			Open - entering part of cursor
			Fetch - retrieve the data row by row from cursor
			Close - exit part as well as closes cursor
			Dellocation - delete cursor defination and release all the system resources associated.

	Types of cursor - 
	Static - query reult is cached for the lifetime of the cursor. can move forward and backward.
	Fast_Forward - its default type for cursor. work only forward
	Dynamic - additions and deletions viible to others in data source while curor i open
	KeySet - we can't see records others add. If another user delete record, it is inaccessible from our record set.
*/

----fetch data from cursor
/*
	first - fetch 1st row
	last - lat row
	next - data in forward direction
	prior - data in backward direction
	abolute n - fetch exact nth row from cursor table
	relative n - data in increamental way as well as decremental way
*/

select * from student_Marks

Declare @RollNO INT,
@Science INT,
@Math INT,
@Eng INT
Declare @Total INT,
@Percentage INT

Declare student_cursor Cursor For Select RollNO,Science,Math,Eng from student_Marks;

open student_cursor

Fetch next from student_cursor INTO @RollNO, @Science, @Math, @Eng

while @@FETCH_STATUS =0
begin
	print concat('Roll no:',@RollNO);
	print concat('Science :',@Science);
	print concat('Math :',@Math);
	print concat('Eng :',@Eng);

	set @Total = @Science+@Math+@Eng;

	print concat('Total: ',@Total);

	set @Percentage = @Total/3;
	print concat('Percentage: ',@Percentage,'%');

	if @Percentage > 80
		begin
			print 'Grade: A';
		end
		else if @Percentage > 60 AND @Percentage <80
		begin
			print 'Grade: B';
		End 
		Else
		Begin
			print 'Grade: C';
		End 
		print '=====';
	fetch next from student_cursor into @RollNO,@Science,@Math,@Eng
End
close student_cursor;
deallocate student_cursor;